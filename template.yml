AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless patterns - EventBridge to SQS

Resources:

  # Define the AWS Events EventBus
  MyEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: MyEventBus  # Replace with your preferred name

  # Define AWS Lambda function to generate events
  EventGeneratorFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.generateEvent
      Runtime: nodejs18.x
      CodeUri: s3://sqs-teja/your-lambda-code.zip # or specify an S3 URI if you're using an S3 bucket
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: rate(30 seconds)  # Trigger every 30 seconds
      Environment:
        Variables:
          EVENTBRIDGE_BUS_NAME: !Ref MyEventBus

  # Define the SQS queue
  MySqsQueue:
    Type: AWS::SQS::Queue

  # Define the event rule to filter for events
  EventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "EventRule"
      ScheduleExpression: "rate(30 seconds)"  # Trigger every 30 seconds
      Targets:
        - Arn: !GetAtt MySqsQueue.Arn
          Id: "SQSqueue"

  # Allow EventBridge to invoke SQS 
  EventBridgeToToSqsPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: SQS:SendMessage
            Resource: !GetAtt MySqsQueue.Arn
      Queues:
        - Ref: MySqsQueue

Outputs:
  SQSqueueName:
    Description: SQS queue name
    Value: !GetAtt MySqsQueue.QueueName

  SQSqueueARN:
    Description: SQS queue ARN
    Value: !GetAtt MySqsQueue.Arn

  SQSqueueURL:
    Description: SQS queue URL
    Value: !Ref MySqsQueue
